package common

import "github.com/stretchr/testify/mock"

// ServiceMock is an autogenerated mock type for the Service type
type ServiceMock struct {
	mock.Mock
}

// AddFlags provides a mock function with given fields:
func (_m *ServiceMock) AddFlags() {
	_m.Called()
}

// Dependencies provides a mock function with given fields:
func (_m *ServiceMock) Dependencies() []ServiceType {
	ret := _m.Called()

	var r0 []ServiceType
	if rf, ok := ret.Get(0).(func() []ServiceType); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]ServiceType)
		}
	}

	return r0
}

// New provides a mock function with given fields: _a0
func (_m *ServiceMock) New(_a0 ServiceGetter) (interface{}, error) {
	ret := _m.Called(_a0)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(ServiceGetter) interface{}); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(ServiceGetter) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Type provides a mock function with given fields:
func (_m *ServiceMock) Type() ServiceType {
	ret := _m.Called()

	var r0 ServiceType
	if rf, ok := ret.Get(0).(func() ServiceType); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(ServiceType)
	}

	return r0
}
