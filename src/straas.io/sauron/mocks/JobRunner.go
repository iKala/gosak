package mocks

import "straas.io/sauron"
import "github.com/stretchr/testify/mock"

// JobRunner is an autogenerated mock type for the JobRunner type
type JobRunner struct {
	mock.Mock
}

// Events provides a mock function with given fields:
func (_m *JobRunner) Events() <-chan sauron.JobEvent {
	ret := _m.Called()

	var r0 <-chan sauron.JobEvent
	if rf, ok := ret.Get(0).(func() <-chan sauron.JobEvent); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan sauron.JobEvent)
		}
	}

	return r0
}

// Start provides a mock function with given fields:
func (_m *JobRunner) Start() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Stop provides a mock function with given fields:
func (_m *JobRunner) Stop() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Update provides a mock function with given fields: jobs
func (_m *JobRunner) Update(jobs []sauron.JobMeta) error {
	ret := _m.Called(jobs)

	var r0 error
	if rf, ok := ret.Get(0).(func([]sauron.JobMeta) error); ok {
		r0 = rf(jobs)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
