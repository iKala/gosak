package mocks

import "straas.io/sauron"
import "github.com/stretchr/testify/mock"

// Engine is an autogenerated mock type for the Engine type
type Engine struct {
	mock.Mock
}

// AddPlugin provides a mock function with given fields: p
func (_m *Engine) AddPlugin(p sauron.Plugin) error {
	ret := _m.Called(p)

	var r0 error
	if rf, ok := ret.Get(0).(func(sauron.Plugin) error); ok {
		r0 = rf(p)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: _a0
func (_m *Engine) Get(_a0 string) (interface{}, error) {
	ret := _m.Called(_a0)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(string) interface{}); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Run provides a mock function with given fields:
func (_m *Engine) Run() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Set provides a mock function with given fields: _a0, _a1
func (_m *Engine) Set(_a0 string, _a1 interface{}) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, interface{}) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetJobMeta provides a mock function with given fields: meta
func (_m *Engine) SetJobMeta(meta sauron.JobMeta) error {
	ret := _m.Called(meta)

	var r0 error
	if rf, ok := ret.Get(0).(func(sauron.JobMeta) error); ok {
		r0 = rf(meta)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
