package mocks

import "straas.io/pierce"
import "github.com/stretchr/testify/mock"

// SocketConnection is an autogenerated mock type for the SocketConnection type
type SocketConnection struct {
	mock.Mock
}

// Emit provides a mock function with given fields: room, data, version
func (_m *SocketConnection) Emit(room pierce.RoomMeta, data interface{}, version uint64) {
	_m.Called(room, data, version)
}

// ID provides a mock function with given fields:
func (_m *SocketConnection) ID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Rooms provides a mock function with given fields:
func (_m *SocketConnection) Rooms() []pierce.RoomMeta {
	ret := _m.Called()

	var r0 []pierce.RoomMeta
	if rf, ok := ret.Get(0).(func() []pierce.RoomMeta); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]pierce.RoomMeta)
		}
	}

	return r0
}
