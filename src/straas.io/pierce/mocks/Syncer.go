package mocks

import "straas.io/pierce"
import "github.com/stretchr/testify/mock"

// Syncer is an autogenerated mock type for the Syncer type
type Syncer struct {
	mock.Mock
}

// Add provides a mock function with given fields: roomMeta
func (_m *Syncer) Add(roomMeta pierce.RoomMeta) {
	_m.Called(roomMeta)
}

// Diff provides a mock function with given fields: namespace, afterIdx, size
func (_m *Syncer) Diff(namespace string, afterIdx uint64, size int) ([]pierce.Record, error) {
	ret := _m.Called(namespace, afterIdx, size)

	var r0 []pierce.Record
	if rf, ok := ret.Get(0).(func(string, uint64, int) []pierce.Record); ok {
		r0 = rf(namespace, afterIdx, size)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]pierce.Record)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, uint64, int) error); ok {
		r1 = rf(namespace, afterIdx, size)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Start provides a mock function with given fields:
func (_m *Syncer) Start() {
	_m.Called()
}

// Stop provides a mock function with given fields:
func (_m *Syncer) Stop() {
	_m.Called()
}
